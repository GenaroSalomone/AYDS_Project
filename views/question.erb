<!DOCTYPE html>
<html>
<head>
  <title>Pregunta</title>
  <link rel="stylesheet" type="text/css" href="/css/question.css">
  <!-- Importación de librería JS para implementar el temporizador-->
  <script src="/js/jquery-3.6.0.js"></script>
  <!-- Código JavaScript para manejar la validación de la selección de respuesta -->
  <script>
     function validateForm() {
      var selectedOption = document.querySelector('input[name="selected_answer"]:checked');
      var timeRemaining = parseInt($('#timer').text());

      if (!selectedOption && timeRemaining > 0) {
        // Si no se seleccionó ninguna opción y todavía hay tiempo restante, mostrar mensaje de alerta
        showMessage("Debe seleccionar una respuesta antes de continuar.");
        return false;
      }
      // Si se cumple la validación existente, se asigna selected_answer como null
      if (!selectedOption) {
        document.querySelector('input[name="selected_answer"]').value = null;
      }
      // Obtener el tiempo restante del temporizador
      var timeRemaining = parseInt($('#timer').text());

      // Establecer el tiempo de respuesta en el campo oculto
      $('#response_time').val(timeRemaining);
      return true;
    }

    function autocompleteValidateForm() {
      var autocompleteInput = document.getElementById('autocomplete-input');
      var timeRemaining = parseInt($('#timer').text());

      if (autocompleteInput.value.trim().length === 0 && timeRemaining > 0) {
        // Si no se ha ingresado ningún carácter y todavía hay tiempo restante, mostrar mensaje de alerta
        showMessage("Debe ingresar al menos un carácter antes de continuar.");
        return false;
      }
      // Obtener el tiempo restante del temporizador
      var timeRemaining = parseInt($('#timer').text());

      // Establecer el tiempo de respuesta en el campo oculto
      $('#response_time').val(timeRemaining);
      return true;
    }

    function showMessage(message) {
      var overlay = document.createElement("div");
      overlay.classList.add("overlay");

      var messageContainer = document.createElement("div");
      messageContainer.classList.add("message-container");
      messageContainer.innerHTML = `
        <div class="message-box">
          <p>${message}</p>
          <button id="entendido-btn" class="button-style">Entendido</button>
        </div>
      `;
      overlay.appendChild(messageContainer);
      document.body.appendChild(overlay);

      var entendidoBtn = document.getElementById("entendido-btn");
      entendidoBtn.addEventListener("click", function() {
        overlay.remove();
      });
    }

     function startTimer(duration, display) {
        var timerContainer = document.getElementById("timer-container");
        var timer = duration, seconds;
        var triviaDifficultyLevel = "<%= @trivia.difficulty.level%>";
        timerContainer.className = "green";
        var intervalId = setInterval(function () {
          seconds = parseInt(timer % 60, 10);
          display.text(seconds);
          timer--;
          if (triviaDifficultyLevel == "beginner") {
            if (timer >= 10){
              timerContainer.className = "green";
            } else if (timer >= 5){
              timerContainer.className = "yellow";
            } else if (timer >= 0){
              timerContainer.className = "red";
            } else {
              clearInterval(intervalId);
              showTimeUpMessage();
            }
          } else if (triviaDifficultyLevel == "difficult") {
              if (timer >= 7){
                timerContainer.className = "green";
              } else if (timer >= 4){
                timerContainer.className = "yellow";
              } else if (timer >= 0){
                timerContainer.className = "red";
              } else {
                clearInterval(intervalId);
                showTimeUpMessage();
              }
          }
        }, 1000);
      }

     $(document).ready(function () {
      var timeLimit = parseInt($("#timer-container").data("time-limit-seconds"));
      var display = $("#timer");
      startTimer(timeLimit, display);
    });

  </script>
</head>
<body>
  <h1>Pregunta <%= @question_index + 1 %> :</h1>
  <% if @question %>
    <p><%= @question.text %></p> <!-- Se muestra la pregunta -->
    <% if @question.is_a?(Autocomplete) %>
      <h2>Ingrese su respuesta:</h2>
      <form action="/answer/<%= @question_index %>" method="post" onsubmit="return autocompleteValidateForm()">
        <input type="hidden" name="response_time" id="response_time" value="">
        <input type="hidden" name="trivia_id" value="<%= @trivia.id %>">
        <input type="hidden" name="question_index" value="<%= @question_index %>">
        <div class="q-autocomplete-container">
          <input type="text" id="autocomplete-input" name="autocomplete_input" class="q-autocomplete-input">
        </div>
        <div id="timer-container" data-time-limit-seconds="<%= @time_limit_seconds %>">
          <span id="timer"></span>
        </div>
        <div class="button-container">
          <button type="submit">Siguiente pregunta</button>
        </div>
         <!-- Boton de ayuda para preguntas autocompletado nivel principiante -->
         <% if @trivia.difficulty.level == "beginner" %>
        <div class="button-container">
          <button type="button" onclick="showHelp('<%=@question.id%>')">¿Necesita una ayuda?</button>
        </div>
        <div id="help-msg" style="display: none;"></div>
        <div id="messageAutocomplete-container"></div>
        <script>
          // Funcion para mostrar un mensaje de ayuda dependiendo el id de la question autocomplete
          function showHelp(autocompleteId) {
            var msg = document.getElementById("help-msg");
            // Se crea un mapa con los mensajes, según las id autocompletados (nivel principiante)
            var messages = {
              22: "Después de la segunda guerra mundial, entre el año 1945 y 1950.",
              23: "Un año que está entre 1980 y 1990.",
              24: "Similar al lenguaje JAVA.",
              25: "Lo opuesto al SOFTWARE.",
              26: "Similar a ANDROIDE.",
              27: "El lenguaje tiene el nombre de una víbora.",
              28: "Ordenamiento rápido.",
              29: "Es un lenguaje de consulta.",
              30: "Lo que se obtiene de la implementación de un algoritmo.",
              31: "Proceso que tiene varios pasos."
            };
            // Se verifica si el id de la question (autocomplete en este caso) esta presente en el mapa
            if (messages.hasOwnProperty(autocompleteId) ){
              var msgAutocomplete = messages[autocompleteId];
              displayMessageAuto(msgAutocomplete);  // se invoca la funcion desplegando el mensaje correspondiente
            }
            // Si se da un click en el boton, se despliega un mensaje, si se vuelve a dar click, se oculta
            if (msg.style.display === "none") {
              msg.style.display = "block";
            } else {
              msg.style.display = "none";
            }
          }

          // Funcion para mostrar el mensaje correspondiente al ID
          function displayMessageAuto(message) {
            var msgContainer = document.getElementById("messageAutocomplete-container");
            msgContainer.textContent = message;
          }
        </script>
      </form>
      <% end %>
    <% else %>
      <h2>Opciones:</h2>
      <form action="/answer/<%= @question_index %>" method="post" onsubmit="return validateForm()">
      <input type="hidden" name="response_time" id="response_time" value="">
        <input type="hidden" name="trivia_id" value="<%= @trivia.id %>">
        <input type="hidden" name="question_index" value="<%= @question_index %>">
        <% @answers.each do |answer| %>
          <label>
            <div class="answer-container">
              <input type="radio" name="selected_answer" value="<%= answer.id %>"
                <% if answer.id == @selected_answer %>
                  checked
                <% end %>
              >
              <span class="answer-text"><%= answer.text %></span>
            </div>
          </label>
    <% end %>
        <div id="timer-container" data-time-limit-seconds="<%= @time_limit_seconds %>">
          <span id="timer"></span>
        </div>
        <div class="button-container">
          <button type="submit">Siguiente pregunta</button>
        </div>
        <%if @trivia.difficulty.level == "beginner"%>
        <!--Boton de ayuda para preguntas choices y true-falses -->
        <div class="button-container">
          <button type="button" onclick="showHelp('<%=@question.id%>')">¿Necesita una ayuda?</button>
        </div>
        <div id="helpAux-msg" style="display: none;"></div>
        <div id="messageChoiceTF-container"></div>
        <script>
          function showHelp(choiceTrueFalseId) {
            var msg = document.getElementById("helpAux-msg");

            var messages = {
              1: "Proceso de conversión.",
              2: "Lenguaje de consulta.",
              3: "Mayor frecuencia.",
              4: "Estructurado, organizado.",
              5: "Aprendizaje.",
              6: "Deja vu.",
              7: "Buscar.",
              8: "Buscar.",
              9: "Alojar código.",
              10: "Lugar donde se almacenan libros.",
              11: "Todos los lenguajes de programación funcional son antiguos.",
              12: "Los elementos de una cola de prioridad están ordenados.",
              13: "No hay declaración de tipos.",
              14: "Si un programa compila, es porque su sintaxis es correcta.",
              15: "Utilización de funciones como scanf y printf.",
              16: "Mil BYTES repesentan un MEGA BYTE.",
              17: "Linux es un núcleo o kernel libre.",
              18: "La inteligencia artificial no puede pensar.",
              19: "Mediante un proceso, un archivo fuente de java se convierte en un archivo ejecutable.",
              20: "Cuando ingresas a una pagina web, ésta comienza con http://...",
              21: "Su creador es Yukihiro Matsumoto"
            };

            if (messages.hasOwnProperty(choiceTrueFalseId)){
              var msgChoiceTF= messages[choiceTrueFalseId];
              displayMessageCTF(msgChoiceTF);
            }
           // Si se da un click en el boton, se despliega un mensaje, si se vuelve a dar click, se oculta
            if (msg.style.display === "none") {
              msg.style.display = "block";
            } else {
              msg.style.display = "none";
            }
          }

          function displayMessageCTF(message) {
            var msgContainer = document.getElementById("messageChoiceTF-container");
            msgContainer.textContent = message;
          }

        </script>
      </form>
      <% end %>
  <% end %>

    <div id="message-box-container"></div>
    <script>
      function showTimeUpMessage() {
        var overlay = document.createElement("div");
        overlay.classList.add("overlay");

        var messageContainer = document.createElement("div");
        messageContainer.classList.add("message-container");
        messageContainer.innerHTML = `
          <div class="message-box">
            <p>Se terminó el tiempo, respuesta marcada como incorrecta!</p>
            <button id="entendido-btn" class="button-style">Entendido</button>
          </div>
        `;
        overlay.appendChild(messageContainer);
        document.body.appendChild(overlay);

        var entendidoBtn = document.getElementById("entendido-btn");
        entendidoBtn.addEventListener("click", function () {
          var autocompleteInput = document.getElementById("autocomplete-input");
          if (autocompleteInput) {
            autocompleteInput.value = null;
          } else {
            document.querySelector('input[name="selected_answer"]').value = null;
          }
          overlay.remove();
          nextQuestion();
        });
      }

     function nextQuestion() {
       document.querySelector("form").submit();
     }

   </script>
  <% else %>
    <h2>No se encontró la pregunta</h2>
  <% end %>
</body>
</html>
